{
  "ActionProperties": "export interface ActionProperties {\n    name: string;\n    params: string[];\n}",
  "HeadlineProperties": "export interface HeadlineProperties {\n    id: 'headline';\n    fieldName?: string; // dynamic text\n    label?: string; // static text\n    level: 1 | 2 | 3 | 4 | 5 | 6; // higher numbers are more useful\n}",
  "LinkProperties": "export interface LinkProperties {\n    id: 'link';\n    fieldName: string; // src\n    label?: string;\n    labelFieldName?: string; // if the data provides a label for the link\n}",
  "TextProperties": "export interface TextProperties { // used for plain text\n    id: 'text';\n    fieldName: string;\n    fontSize: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n    align?: string;\n    format?: TextFormatter[];\n}",
  "LabeledTextProperties": "export interface LabeledTextProperties {\n    id: 'labeledText';\n    fieldName: string;\n    label: string;\n    separator: ':';\n    fontSize: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n    format?: TextFormatter[];\n}",
  "CodeProperties": "export interface CodeProperties {\n    id: 'code';\n    fieldName: string;\n    description?: string;\n    type?: 'json';\n}",
  "ConcatTextProperties": "export interface ConcatTextProperties { // used to concat multiple data fields into one text component\n    id: 'concatText';\n    fields: string[];  // Array of field paths\n    separator: string;\n    fontSize: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n    format?: TextFormatter[];\n}",
  "ImageProperties": "export interface ImageProperties {\n    id: 'image';\n    fieldName: string;\n    alt: string;\n    size?: string; // size in px \"100px\"\n}",
  "FormProperties": "export interface FormProperties extends LayoutConfig { // wraps input components\n    id: 'form';\n    fieldName: string;\n    formFields: string[];\n    onSubmit: string;\n    validation: any;\n    components: ComponentConfig[];\n}",
  "InputProperties": "export interface InputProperties {\n    id: 'input';\n    fieldName: string;\n    label: string;\n    placeholder?: string;\n    type?: 'text' | 'password' | 'number' | 'email'; // defaults to text\n}",
  "TextareaProperties": "export interface TextareaProperties {\n    id: 'textarea';\n    fieldName: string;\n    label: string;\n    placeholder?: string;\n    format?: TextFormatter[];\n}",
  "ButtonProperties": "export interface ButtonProperties {\n    id: 'button';\n    fieldName?: string;\n    label?: string;\n    type?: ButtonType;\n    format?: TextFormatter[]; // Array of formatter keys\n}",
  "SelectProperties": "export interface SelectProperties {\n    id: 'select';\n    fieldName?: string;\n    label: string;\n}",
  "ListProperties": "export interface ListProperties {\n    id: 'list';\n    fieldName: string;\n    direction?: 'row' | 'column';\n    as?: 'grid'; // uses a grid layout internally to layout the elements. use this if you want to show an array in a grid.\n    gridSettings?: GridSettings; // this has to be set if 'as': 'grid'!\n    layout: LayoutConfig;\n}",
  "GridLayoutProperties": "export interface GridLayoutProperties extends LayoutConfig {\n    id: 'grid';\n    gridSettings: GridSettings;\n    components: ComponentConfig[];\n}",
  "FlexLayoutProperties": "export interface FlexLayoutProperties extends LayoutConfig { // can be nested\n    id: 'flexLayout';\n    direction: 'row' | 'column';\n    justify?: string;\n    align?: string;\n    components: ComponentConfig[];\n}",
  "CardLayoutProperties": "export interface CardLayoutProperties extends LayoutConfig { // can be nested\n    id: 'cardLayout';\n    components: ComponentConfig[]; // the body of the card\n}",
  "ComponentConfig": "export interface ComponentConfig { // describes the above components\n    type: 'Input' | 'Button' | 'Headline' | 'Textarea' | 'FlexLayout' | 'CardLayout' | 'Code'\n      | 'Image' | 'Text' | 'LabeledText' | 'List' | 'Link' | 'ConcatText' | 'Form' | 'GridLayout' | 'Select';\n    properties: InputProperties | ButtonProperties | HeadlineProperties | TextareaProperties | CodeProperties\n      | FlexLayoutProperties | ImageProperties | CardLayoutProperties | TextProperties | LabeledTextProperties\n      | ListProperties | LinkProperties | ConcatTextProperties | FormProperties | GridLayoutProperties | SelectProperties;\n}",
  "LayoutConfig": "export interface LayoutConfig { // the root of the components\n    components: ComponentConfig[];\n}"
}